# Tontoo Code Documentation
version: 1.9.0
author: arlomu
website: https://arlocraftmc.de

# Core Features
features:
  - Build system for Tontoo projects
  - Package management
  - Web server with SSL support
  - API endpoints
  - User authentication
  - MySQL database integration
  - File operations
  - Command execution

# Commands
commands:
  - name: build
    description: Build the current project into a .tontoo file
    usage: tontoo build
  
  - name: dev
    description: Run the project in development mode
    usage: tontoo dev
  
  - name: setup
    description: Create a new Tontoo project structure
    usage: tontoo setup
  
  - name: install
    description: Install a package
    usage: tontoo install <package_name>[@version]
  
  - name: uninstall
    description: Uninstall a package
    usage: tontoo uninstall <package_name>
  
  - name: update
    description: Update all or specific packages
    usage: tontoo update [package_name]
  
  - name: info
    description: Show version information
    usage: tontoo info
  
  - name: run
    description: Run a .tontoo project file
    usage: tontoo <file.tontoo>

# Package System
package_system:
  manifest: package.yml
  location: tont-packets/
  features:
    - Version management
    - Dependency tracking
    - Post-install scripts
    - Pre-uninstall scripts
    - Metadata (name, version, description)

# Language Syntax
syntax:
  variables:
    - pattern: VB: NAME: "value"
      description: Define a variable
  
  functions:
    - pattern: :start: functionName
      description: Start a function block
    - pattern: :end:
      description: End a function block
  
  mysql:
    - pattern: mysql: "connectionId" { config }
      description: Setup MySQL connection
  
  web_api:
    - pattern: webAPI: "apiName" { config }
      description: Define a web API endpoint
  
  web_server:
    - pattern: startWEB: "/path" { config }
      description: Start a web server
  
  file_operations:
    - pattern: copyFile { "from": "source", "to": "dest" }
      description: Copy a file
    - pattern: deleteFile "path"
      description: Delete a file
    - pattern: addFolder "path"
      description: Create a folder
  
  commands:
    - pattern: run: "command"
      description: Execute a system command
  
  logging:
    - pattern: console.log: "message"
      description: Print a message to console

# MySQL Integration
mysql:
  connection:
    parameters:
      - host
      - user
      - password
      - database
  usage: |
    After setting up a connection with mysql: "id" { config },
    you can use ${id}_query(sql, params) to execute queries

# Web Server Features
web_server:
  features:
    - Static file serving
    - SSL/TLS support
    - Custom error pages
    - API routing
    - User authentication
  config_options:
    - port: HTTP port
    - host: Server host
    - path: Public directory
    - landing: Default file
    - 404: Custom 404 page
    - ssl: Enable SSL (true/false)
    - sslport: HTTPS port
    - sslbits: Key strength
    - api: API base path
    - user: Enable auth (true/false)

# Examples
examples:
  - name: Basic web server
    code: |
      startWEB: /public/
      {
        "port": "8080",
        "host": "localhost",
        "landing": "index.html"
      }
  
  - name: MySQL connection
    code: |
      mysql: "db"
      {
        "host": "localhost",
        "user": "root",
        "password": "",
        "database": "test"
      }
      
      :start: getUsers
      const users = await ${db}_query("SELECT * FROM users");
      console.log: "Users: ${users}"
      :end: